//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use super::sea_orm_active_enums::AbuseReportResolverExpiresatEnum;
use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "abuse_report_resolver")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    #[sea_orm(column_name = "updatedAt")]
    pub updated_at: DateTimeWithTimeZone,
    pub name: String,
    #[sea_orm(column_name = "targetUserPattern")]
    pub target_user_pattern: Option<String>,
    #[sea_orm(column_name = "reporterPattern")]
    pub reporter_pattern: Option<String>,
    #[sea_orm(column_name = "reportContentPattern")]
    pub report_content_pattern: Option<String>,
    #[sea_orm(column_name = "expirationDate")]
    pub expiration_date: Option<DateTimeWithTimeZone>,
    #[sea_orm(column_name = "expiresAt")]
    pub expires_at: AbuseReportResolverExpiresatEnum,
    pub forward: bool,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
